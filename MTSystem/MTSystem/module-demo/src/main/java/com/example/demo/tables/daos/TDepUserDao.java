/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.daos;


import com.example.demo.tables.TDepUser;
import com.example.demo.tables.records.TDepUserRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TDepUserDao extends DAOImpl<TDepUserRecord, com.example.demo.tables.pojos.TDepUser, Integer> {

    /**
     * Create a new TDepUserDao without any configuration
     */
    public TDepUserDao() {
        super(TDepUser.T_DEP_USER, com.example.demo.tables.pojos.TDepUser.class);
    }

    /**
     * Create a new TDepUserDao with an attached configuration
     */
    @Autowired
    public TDepUserDao(Configuration configuration) {
        super(TDepUser.T_DEP_USER, com.example.demo.tables.pojos.TDepUser.class, configuration);
    }

    @Override
    public Integer getId(com.example.demo.tables.pojos.TDepUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TDepUser.T_DEP_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchById(Integer... values) {
        return fetch(TDepUser.T_DEP_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.demo.tables.pojos.TDepUser fetchOneById(Integer value) {
        return fetchOne(TDepUser.T_DEP_USER.ID, value);
    }

    /**
     * Fetch records that have <code>dep_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchRangeOfDepId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TDepUser.T_DEP_USER.DEP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dep_id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchByDepId(Integer... values) {
        return fetch(TDepUser.T_DEP_USER.DEP_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TDepUser.T_DEP_USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepUser> fetchByUserId(Integer... values) {
        return fetch(TDepUser.T_DEP_USER.USER_ID, values);
    }
}
