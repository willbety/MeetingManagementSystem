/*
 * This file is generated by jOOQ.
 */
package com.example.demo;


import com.example.demo.tables.TDepUser;
import com.example.demo.tables.TDepment;
import com.example.demo.tables.TDevice;
import com.example.demo.tables.TMeeting;
import com.example.demo.tables.TMeetroom;
import com.example.demo.tables.TUser;
import com.example.demo.tables.TUserDev;
import com.example.demo.tables.records.TDepUserRecord;
import com.example.demo.tables.records.TDepmentRecord;
import com.example.demo.tables.records.TDeviceRecord;
import com.example.demo.tables.records.TMeetingRecord;
import com.example.demo.tables.records.TMeetroomRecord;
import com.example.demo.tables.records.TUserDevRecord;
import com.example.demo.tables.records.TUserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * li.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TDepUserRecord> KEY_T_DEP_USER_PRIMARY = Internal.createUniqueKey(TDepUser.T_DEP_USER, DSL.name("KEY_t_dep_user_PRIMARY"), new TableField[] { TDepUser.T_DEP_USER.ID }, true);
    public static final UniqueKey<TDepmentRecord> KEY_T_DEPMENT_PRIMARY = Internal.createUniqueKey(TDepment.T_DEPMENT, DSL.name("KEY_t_depment_PRIMARY"), new TableField[] { TDepment.T_DEPMENT.DEP_ID }, true);
    public static final UniqueKey<TDepmentRecord> KEY_T_DEPMENT_T_DEPMENT_DEP_ID_UINDEX = Internal.createUniqueKey(TDepment.T_DEPMENT, DSL.name("KEY_t_depment_t_depment_dep_id_uindex"), new TableField[] { TDepment.T_DEPMENT.DEP_ID }, true);
    public static final UniqueKey<TDeviceRecord> KEY_T_DEVICE_PRIMARY = Internal.createUniqueKey(TDevice.T_DEVICE, DSL.name("KEY_t_device_PRIMARY"), new TableField[] { TDevice.T_DEVICE.DEV_ID }, true);
    public static final UniqueKey<TMeetingRecord> KEY_T_MEETING_PRIMARY = Internal.createUniqueKey(TMeeting.T_MEETING, DSL.name("KEY_t_meeting_PRIMARY"), new TableField[] { TMeeting.T_MEETING.ID }, true);
    public static final UniqueKey<TMeetroomRecord> KEY_T_MEETROOM_PRIMARY = Internal.createUniqueKey(TMeetroom.T_MEETROOM, DSL.name("KEY_t_meetroom_PRIMARY"), new TableField[] { TMeetroom.T_MEETROOM.ID }, true);
    public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = Internal.createUniqueKey(TUser.T_USER, DSL.name("KEY_t_user_PRIMARY"), new TableField[] { TUser.T_USER.USER_ID }, true);
    public static final UniqueKey<TUserDevRecord> KEY_T_USER_DEV_PRIMARY = Internal.createUniqueKey(TUserDev.T_USER_DEV, DSL.name("KEY_t_user_dev_PRIMARY"), new TableField[] { TUserDev.T_USER_DEV.ID }, true);
}
