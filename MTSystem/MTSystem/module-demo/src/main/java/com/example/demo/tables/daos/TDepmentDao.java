/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.daos;


import com.example.demo.tables.TDepment;
import com.example.demo.tables.records.TDepmentRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TDepmentDao extends DAOImpl<TDepmentRecord, com.example.demo.tables.pojos.TDepment, Integer> {

    /**
     * Create a new TDepmentDao without any configuration
     */
    public TDepmentDao() {
        super(TDepment.T_DEPMENT, com.example.demo.tables.pojos.TDepment.class);
    }

    /**
     * Create a new TDepmentDao with an attached configuration
     */
    @Autowired
    public TDepmentDao(Configuration configuration) {
        super(TDepment.T_DEPMENT, com.example.demo.tables.pojos.TDepment.class, configuration);
    }

    @Override
    public Integer getId(com.example.demo.tables.pojos.TDepment object) {
        return object.getDepId();
    }

    /**
     * Fetch records that have <code>dep_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchRangeOfDepId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TDepment.T_DEPMENT.DEP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dep_id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchByDepId(Integer... values) {
        return fetch(TDepment.T_DEPMENT.DEP_ID, values);
    }

    /**
     * Fetch a unique record that has <code>dep_id = value</code>
     */
    public com.example.demo.tables.pojos.TDepment fetchOneByDepId(Integer value) {
        return fetchOne(TDepment.T_DEPMENT.DEP_ID, value);
    }

    /**
     * Fetch records that have <code>dep_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchRangeOfDepName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TDepment.T_DEPMENT.DEP_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dep_name IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchByDepName(String... values) {
        return fetch(TDepment.T_DEPMENT.DEP_NAME, values);
    }

    /**
     * Fetch records that have <code>dep_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchRangeOfDepCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TDepment.T_DEPMENT.DEP_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dep_count IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TDepment> fetchByDepCount(Integer... values) {
        return fetch(TDepment.T_DEPMENT.DEP_COUNT, values);
    }
}
