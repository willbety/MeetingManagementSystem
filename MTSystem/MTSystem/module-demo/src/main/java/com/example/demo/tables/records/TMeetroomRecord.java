/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.records;


import com.example.demo.tables.TMeetroom;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TMeetroomRecord extends UpdatableRecordImpl<TMeetroomRecord> implements Record4<Integer, String, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>li.t_meetroom.id</code>.
     */
    public TMeetroomRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>li.t_meetroom.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>li.t_meetroom.room_name</code>.
     */
    public TMeetroomRecord setRoomName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>li.t_meetroom.room_name</code>.
     */
    public String getRoomName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>li.t_meetroom.root_size</code>.
     */
    public TMeetroomRecord setRootSize(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>li.t_meetroom.root_size</code>.
     */
    public Integer getRootSize() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>li.t_meetroom.room_state</code>.
     */
    public TMeetroomRecord setRoomState(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>li.t_meetroom.room_state</code>.
     */
    public Boolean getRoomState() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TMeetroom.T_MEETROOM.ID;
    }

    @Override
    public Field<String> field2() {
        return TMeetroom.T_MEETROOM.ROOM_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return TMeetroom.T_MEETROOM.ROOT_SIZE;
    }

    @Override
    public Field<Boolean> field4() {
        return TMeetroom.T_MEETROOM.ROOM_STATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRoomName();
    }

    @Override
    public Integer component3() {
        return getRootSize();
    }

    @Override
    public Boolean component4() {
        return getRoomState();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRoomName();
    }

    @Override
    public Integer value3() {
        return getRootSize();
    }

    @Override
    public Boolean value4() {
        return getRoomState();
    }

    @Override
    public TMeetroomRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TMeetroomRecord value2(String value) {
        setRoomName(value);
        return this;
    }

    @Override
    public TMeetroomRecord value3(Integer value) {
        setRootSize(value);
        return this;
    }

    @Override
    public TMeetroomRecord value4(Boolean value) {
        setRoomState(value);
        return this;
    }

    @Override
    public TMeetroomRecord values(Integer value1, String value2, Integer value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TMeetroomRecord
     */
    public TMeetroomRecord() {
        super(TMeetroom.T_MEETROOM);
    }

    /**
     * Create a detached, initialised TMeetroomRecord
     */
    public TMeetroomRecord(Integer id, String roomName, Integer rootSize, Boolean roomState) {
        super(TMeetroom.T_MEETROOM);

        setId(id);
        setRoomName(roomName);
        setRootSize(rootSize);
        setRoomState(roomState);
    }
}
