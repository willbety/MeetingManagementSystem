/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.daos;


import com.example.demo.tables.TUser;
import com.example.demo.tables.records.TUserRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TUserDao extends DAOImpl<TUserRecord, com.example.demo.tables.pojos.TUser, Integer> {

    /**
     * Create a new TUserDao without any configuration
     */
    public TUserDao() {
        super(TUser.T_USER, com.example.demo.tables.pojos.TUser.class);
    }

    /**
     * Create a new TUserDao with an attached configuration
     */
    @Autowired
    public TUserDao(Configuration configuration) {
        super(TUser.T_USER, com.example.demo.tables.pojos.TUser.class, configuration);
    }

    @Override
    public Integer getId(com.example.demo.tables.pojos.TUser object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TUser.T_USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserId(Integer... values) {
        return fetch(TUser.T_USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.example.demo.tables.pojos.TUser fetchOneByUserId(Integer value) {
        return fetchOne(TUser.T_USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserName(String... values) {
        return fetch(TUser.T_USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>user_password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_password IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserPassword(String... values) {
        return fetch(TUser.T_USER.USER_PASSWORD, values);
    }

    /**
     * Fetch records that have <code>user_age BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserAge(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TUser.T_USER.USER_AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_age IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserAge(Integer... values) {
        return fetch(TUser.T_USER.USER_AGE, values);
    }

    /**
     * Fetch records that have <code>user_sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserSex(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(TUser.T_USER.USER_SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_sex IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserSex(Boolean... values) {
        return fetch(TUser.T_USER.USER_SEX, values);
    }

    /**
     * Fetch records that have <code>user_phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_phone IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserPhone(String... values) {
        return fetch(TUser.T_USER.USER_PHONE, values);
    }

    /**
     * Fetch records that have <code>user_email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_email IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserEmail(String... values) {
        return fetch(TUser.T_USER.USER_EMAIL, values);
    }

    /**
     * Fetch records that have <code>user_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchRangeOfUserRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_role IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TUser> fetchByUserRole(String... values) {
        return fetch(TUser.T_USER.USER_ROLE, values);
    }
}
