/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.daos;


import com.example.demo.tables.TMeeting;
import com.example.demo.tables.records.TMeetingRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TMeetingDao extends DAOImpl<TMeetingRecord, com.example.demo.tables.pojos.TMeeting, Integer> {

    /**
     * Create a new TMeetingDao without any configuration
     */
    public TMeetingDao() {
        super(TMeeting.T_MEETING, com.example.demo.tables.pojos.TMeeting.class);
    }

    /**
     * Create a new TMeetingDao with an attached configuration
     */
    @Autowired
    public TMeetingDao(Configuration configuration) {
        super(TMeeting.T_MEETING, com.example.demo.tables.pojos.TMeeting.class, configuration);
    }

    @Override
    public Integer getId(com.example.demo.tables.pojos.TMeeting object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchById(Integer... values) {
        return fetch(TMeeting.T_MEETING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.demo.tables.pojos.TMeeting fetchOneById(Integer value) {
        return fetchOne(TMeeting.T_MEETING.ID, value);
    }

    /**
     * Fetch records that have <code>meet_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEET_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meet_name IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetName(String... values) {
        return fetch(TMeeting.T_MEETING.MEET_NAME, values);
    }

    /**
     * Fetch records that have <code>meet_due BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetDue(String lowerInclusive, String upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEET_DUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meet_due IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetDue(String... values) {
        return fetch(TMeeting.T_MEETING.MEET_DUE, values);
    }

    /**
     * Fetch records that have <code>meetroom_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetroomName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEETROOM_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meetroom_name IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetroomName(String... values) {
        return fetch(TMeeting.T_MEETING.MEETROOM_NAME, values);
    }

    /**
     * Fetch records that have <code>meet_dev BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetDev(String lowerInclusive, String upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEET_DEV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meet_dev IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetDev(String... values) {
        return fetch(TMeeting.T_MEETING.MEET_DEV, values);
    }

    /**
     * Fetch records that have <code>meet_start BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetStart(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEET_START, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meet_start IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetStart(LocalDateTime... values) {
        return fetch(TMeeting.T_MEETING.MEET_START, values);
    }

    /**
     * Fetch records that have <code>meet_end BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchRangeOfMeetEnd(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TMeeting.T_MEETING.MEET_END, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meet_end IN (values)</code>
     */
    public List<com.example.demo.tables.pojos.TMeeting> fetchByMeetEnd(LocalDateTime... values) {
        return fetch(TMeeting.T_MEETING.MEET_END, values);
    }
}
